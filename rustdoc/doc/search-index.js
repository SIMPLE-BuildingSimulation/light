var searchIndex = JSON.parse('{\
"light":{"doc":"This is SIMPLE’s Light and Solar calculation module. It …","t":[6,17,2,0,0,0,3,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,3,3,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,18,3,11,11,11,11,11,11,11,5,11,11,11,11,12,12,11,11,11,11,11],"n":["Float","PI","SolarModel","model","optical_info","solar_surface","SolarModel","borrow","borrow_mut","from","into","march","module_name","new","optical_info","options","solar","try_from","try_into","type_id","update_ir_radiation","update_solar_radiation","vzip","IRViewFactorSet","OpticalInfo","air","back_fenestrations_dc","back_fenestrations_view_factors","back_surfaces_dc","back_surfaces_view_factors","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","fmt","from","from","front_fenestrations_dc","front_fenestrations_view_factors","front_surfaces_dc","front_surfaces_view_factors","ground","into","into","new","serialize","serialize","sky","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DELTA","SolarSurface","back_rays","borrow","borrow_mut","calc_solar_dc_matrix","calc_view_factors","from","front_rays","get_sampler","into","make_fenestrations","make_surfaces","new","normal","points","solar_irradiance","try_from","try_into","type_id","vzip"],"q":["light","","","","","","light::model","","","","","","","","","","","","","","","","","light::optical_info","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","light::solar_surface","","","","","","","","","","","","","","","","","","","",""],"d":["The kind of Floating point number used in the library… …","Well, Pi.","","The main export of this module: A Simulation Model for …","","","The main model","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","The scene that makes up this model from a radiation point …","The options for the model.","The calculator for solar position and other solar variables","","","","This function makes the IR heat transfer Zero… we will …","","","A set of view factors as seen by a <code>ThermalSurface</code>.","Information about the solar radiation and other optical …","The fraction of the view that corresponds to other objects …","The Daylight Coefficients matrix for the back-side of the …","The <code>IRViewFactorSet</code> for the back side of each fenestration","The Daylight Coefficients matrix for the back-side of the  …","The <code>IRViewFactorSet</code> for the back side of each surface","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","The Daylight Coefficients matrix for the front-side of the …","The <code>IRViewFactorSet</code> for the front side of each fenestration","The Daylight Coefficients matrix for the front-side of the …","The <code>IRViewFactorSet</code> for the front side of each surface","The fraction of the view that corresponds to the ground","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","The fraction of the view that corresponds to the sky","","","","","","","","","","","Offset for the starting point of the rays.","Structure that can help calculate solar radiation","Gets the back rays of a surface","","","Receives a list of <code>SolarSurface</code> objects as well as the …","Calculates an <code>IRViewFactorSet</code> for this surface","Returns the argument unchanged.","Gets the front rays of a surface","","Calls <code>U::from(self)</code>.","Builds a set of SolarSurfaces from Fenestrations","Builds a set of SolarSurfaces from Surfaces","","","","Calculates the Daylight Coefficient matrix for the front …","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,3,3,3,3,2,3,2,3,2,3,2,3,2,2,3,2,2,3,3,3,3,3,2,2,3,3,2,3,2,2,3,2,3,2,3,2,3,2,3,4,0,4,4,4,4,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4],"f":[null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],[[]],[[["solarmodel",3],["date",3],["weather",8],["simplemodel",3],["simulationstate",6]],["result",4,[["string",3]]]],[[],["str",0]],[[["metaoptions",3],["solaroptions",3],["simplemodel",3],["simulationstateheader",3],["usize",0]],["result",4,[["string",3]]]],null,null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["solarmodel",3],["currentweather",3],["simplemodel",3],["simulationstate",6]],["result",4,[["string",3]]]],[[["solarmodel",3],["date",3],["currentweather",3],["simplemodel",3],["simulationstate",6]]],[[]],null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["irviewfactorset",3]],["irviewfactorset",3]],[[["opticalinfo",3]],["opticalinfo",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["irviewfactorset",3]],[[],["result",4,[["irviewfactorset",3]]]],[[],["result",4,[["opticalinfo",3]]]],[[["irviewfactorset",3],["formatter",3]],["result",6]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[["solaroptions",3],["simplemodel",3],["simulationstateheader",3]],["opticalinfo",3]],[[["irviewfactorset",3]],["result",4]],[[["opticalinfo",3]],["result",4]],null,[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,[[["solarsurface",3]],["vec",3,[["ray3d",3]]]],[[["",0]],["",0]],[[["",0]],["",0]],[[["scene",3],["dcfactory",3],["bool",0]],["matrix",6]],[[["solarsurface",3],["scene",3],["bool",0]],["irviewfactorset",3]],[[]],[[["solarsurface",3]],["vec",3,[["ray3d",3]]]],[[["vec",3,[["float",6]]]],["fn",8]],[[]],[[["simulationstateheader",3],["usize",0]],["vec",3,[["solarsurface",3]]]],[[["simulationstateheader",3],["usize",0]],["vec",3,[["solarsurface",3]]]],[[["usize",0],["polygon3d",3]],["solarsurface",3]],null,null,[[["solarsurface",3],["scene",3],["dcfactory",3]],["matrix",6]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]]],"p":[[3,"SolarModel"],[3,"IRViewFactorSet"],[3,"OpticalInfo"],[3,"SolarSurface"]]},\
"simple_light":{"doc":"","t":[5],"n":["main"],"q":["simple_light"],"d":[""],"i":[0],"f":[[[]]],"p":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};

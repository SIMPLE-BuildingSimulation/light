var searchIndex = JSON.parse('{\
"simple_light":{"doc":"","t":[5],"n":["main"],"q":["simple_light"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"solar_model":{"doc":"","t":[6,17,0,0,3,11,11,5,11,11,11,12,12,12,11,12,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11],"n":["Float","PI","daylight_coefficients","model","DCFactory","borrow","borrow_mut","calc_dc","default","from","into","limit_weight","max_depth","n_ambient_samples","new","reinhart","trace_ray","try_from","try_into","type_id","vzip","SolarModel","borrow","borrow_mut","from","into","march","module_name","new","try_from","try_into","type_id","vzip"],"q":["solar_model","","","","solar_model::daylight_coefficients","","","","","","","","","","","","","","","","","solar_model::model","","","","","","","","","","",""],"d":["","","","","A structure meant to calculate DC matrices for Climate …","","","","","","","","","","Creates a new <code>DCFactory</code> with a Reinhart subdivision <code>mf</code>","","Recursively traces a ray until it excedes the <code>max_depth</code> of …","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2],"f":[null,null,null,null,null,[[]],[[]],[[["usize",15],["scene",3]],["matrix",3]],[[]],[[]],[[]],null,null,null,[[["usize",15]]],null,[[["usize",15],["ray",3],["f64",15],["matrix",3],["randgen",6],["scene",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[]],[[["weather",8],["simplemodel",3],["simulationstate",6],["date",3]],[["string",3],["result",4,["string"]]]],[[],["str",15]],[[["usize",15],["simplemodel",3],["simulationstateheader",3]],[["string",3],["result",4,["string"]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"DCFactory"],[3,"SolarModel"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};
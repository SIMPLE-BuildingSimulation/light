var searchIndex = JSON.parse('{\
"simple_light":{"doc":"","t":[5],"n":["main"],"q":["simple_light"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"solar_model":{"doc":"","t":[6,17,0,0,3,12,12,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,18,3,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,12,11,11,11,11],"n":["Float","PI","model","solar_surface","SolarModel","back_fenestrations_dc","back_surfaces_dc","borrow","borrow_mut","from","front_fenestrations_dc","front_surfaces_dc","into","march","module_name","new","options","solar","try_from","try_into","type_id","vzip","DELTA","SolarSurface","back_rays","back_solar_irradiance","borrow","borrow_mut","calc_back_solar_dc_matrix","calc_front_solar_dc_matrix","from","front_rays","front_solar_irradiance","get_back_solar_dc_matrix","get_front_solar_dc_matrix","get_sampler","into","make_fenestrations","make_surfaces","new","normal","points","try_from","try_into","type_id","vzip"],"q":["solar_model","","","","solar_model::model","","","","","","","","","","","","","","","","","","solar_model::solar_surface","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","The Daylight Coefficients matrix for the back-side of the …","The Daylight Coefficients matrix for the back-side of the  …","","","Returns the argument unchanged.","The Daylight Coefficients matrix for the front-side of the …","The scene that makes up this model from a radiation point …","Calls <code>U::from(self)</code>.","","","","The options for the model.","The calculator for solar position and other solar variables","","","","","Offset for the starting point of the rays.","Structure that can help calculate solar radiation","Gets the back rays of a surface","Calculates the Daylight Coefficient matrix for the back of …","","","Receives a list of <code>SolarSurface</code> objects as well as the …","Receives a list of <code>SolarSurface</code> objects as well as the …","Returns the argument unchanged.","Gets the front rays of a surface","Calculates the Daylight Coefficient matrix for the front …","Gets the back Daylight Coefficient Matrix that can be used …","Gets the front Daylight Coefficient Matrix that can be …","","Calls <code>U::from(self)</code>.","Builds a set of SolarSurfaces from Fenestrations","Builds a set of SolarSurfaces from Surfaces","","","","","","",""],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,0,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2],"f":[null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[]],null,null,[[]],[[["",0],["date",3],["weather",8],["simplemodel",3],["simulationstate",6]],["result",4,[["string",3]]]],[[],["str",0]],[[["metaoptions",3],["solaroptions",3],["simplemodel",3],["simulationstateheader",3],["usize",0]],["result",4,[["string",3]]]],null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,[[["",0]],["vec",3,[["ray3d",3]]]],[[["",0],["scene",3],["dcfactory",3]],["matrix",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["scene",3],["dcfactory",3]],["matrix",6]],[[["scene",3],["dcfactory",3]],["matrix",6]],[[]],[[["",0]],["vec",3,[["ray3d",3]]]],[[["",0],["scene",3],["dcfactory",3]],["matrix",6]],[[["option",4,[["string",3]]],["scene",3],["dcfactory",3]],["result",4,[["matrix",6],["string",3]]]],[[["option",4,[["string",3]]],["scene",3],["dcfactory",3]],["result",4,[["matrix",6],["string",3]]]],[[["vec",3,[["float",6]]]]],[[]],[[["simulationstateheader",3],["usize",0]],["vec",3,[["solarsurface",3]]]],[[["simulationstateheader",3],["usize",0]],["vec",3,[["solarsurface",3]]]],[[["usize",0],["polygon3d",3]]],null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]]],"p":[[3,"SolarModel"],[3,"SolarSurface"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};